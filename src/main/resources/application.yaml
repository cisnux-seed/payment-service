spring:
  webflux:
    static-path-pattern: ""
  web:
    resources:
      add-mappings: false
      static-locations: [ ]
      cache:
        period: 0
  application:
    name: payment
  jackson:
    property-naming-strategy: SNAKE_CASE
  main:
    web-application-type: reactive
  r2dbc:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  kafka:
    bootstrap-servers: ${BOOTSTRAP_SERVERS}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      batch-size: 16384
      linger-ms: 5
      buffer-memory: 33554432
      max-block-ms: 60000
      request-timeout-ms: 30000
      delivery-timeout-ms: 120000
      enable-idempotence: true
      max-in-flight-requests-per-connection: 1
      compression-type: gzip
      properties:
        spring.json.add.type.headers: false
        spring.json.trusted.packages: "*"
server:
  port: ${SERVER_PORT:8080}
logging:
  level:
    org.springframework.r2dbc.core: ${DATABASE_LOG_LEVEL:DEBUG}
    io.r2dbc.spi: ${DATABASE_LOG_LEVEL:DEBUG}
    org.springframework.web: ${WEB_LOG_LEVEL:DEBUG}
app:
  kafka:
    transaction-topic: transaction-events